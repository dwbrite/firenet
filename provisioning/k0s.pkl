import "@k8s/K8sResource.pkl"
import "machines.pkl"

class K0sSpec {
  hosts: Listing<machines.K0sConfig>
  k0s: Dynamic
}

class K0sCluster extends K8sResource {
  fixed apiVersion = "k0sctl.k0sproject.io/v1beta1"
  fixed kind = "Cluster"
  metadata: Dynamic
  spec: K0sSpec
}

output {
  value = new K0sCluster {
    metadata {
      name = "clementine"
    }
    spec {
      hosts = new Listing {
        for (machine in machines.networkConfig.cluster.machines) {
          machine.k0s
        }
      }

      k0s {
        version = "v1.29.2+k0s.0" // optional; remove to get version automatically
        config {
          apiVersion = "k0s.k0sproject.io/v1beta1"
          kind = "ClusterConfig"
          metadata {
            name = "clementine"
          }
          spec {
            network {
              provider = "calico"
              kuberouter = null
              calico {
                local calico_version = "3.27.0"
                cni {
                  version = calico_version
                }
                node {
                  version = calico_version
                }
                kubecontrollers {
                  version = calico_version
                }
              }
              kubeProxy {
                mode = "ipvs"
                ipvs {
                  strictARP = true
                }
              }
            }
            extensions {
              helm {
                repositories = new Listing {
                  new Dynamic {
                    name = "stable"
                    url = "https://charts.helm.sh/stable"
                  }
                  new Dynamic {
                    name = "prometheus-community"
                    url = "https://prometheus-community.github.io/helm-charts"
                  }
                }
                charts = new Listing {
                  new Dynamic {
                    name = "prometheus-stack"
                    chartname = "prometheus-community/prometheus"
                    version = "14.6.1"
                    order = 1
                    values = """
                        alertmanager:
                          persistentVolume:
                            enabled: false
                        server:
                          persistentVolume:
                            enabled: false
                      """
                    namespace = "default"
                  }
                  new Dynamic {
                    name = "oci-chart"
                    chartname = "oci://registry:8080/chart"
                    version = "0.0.1"
                    order = 2
                    values = ""
                    namespace = "default"
                  }
                  new Dynamic {
                    name = "tgz-chart"
                    chartname = "/tmp/chart.tgz"
                    version = "0.0.1"
                    order = 2
                    values = ""
                    namespace = "default"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
