# this justfile acts as documentation by example

# secrets.yml is an ansible vault file, locked by a gitignored .vault_pass.
# said .vault_pass can be found in keepass.

list-inventory:
  ansible-inventory -i inventory.ini --list

# - adds ssh keypair for inter-node communication
# - resizes root partition to fill disk
# initial configuration following manual setup
init-cluster-hardware:
  ansible-playbook -i inventory.ini -l all playbooks/cluster.yml --vault-password-file .vault_pass --extra-vars '@secrets.yml'

# modifies vyos configuration to match the config file
network:
  ansible-playbook -i inventory.ini -l network playbooks/network.yml --vault-password-file .vault_pass --extra-vars '@secrets.yml'

#
configure-proxies:
  ansible-playbook -i inventory.ini -l proxy playbooks/proxies.yml --vault-password-file .vault_pass --extra-vars '@secrets.yml'

edit-secrets:
  ansible-vault edit secrets.yml --vault-password-file .vault_pass

# runs k0sctl commands on operator machine, applying configuration from config.yml
create-cluster:
  env SSH_KNOWN_HOSTS=/dev/null k0sctl apply --config config/k0sctl.yml
  env SSH_KNOWN_HOSTS=/dev/null k0sctl kubeconfig --config config/k0sctl.yml > ~/.kube/config

reset-cluster:
  env SSH_KNOWN_HOSTS=/dev/null k0sctl reset --config config/k0sctl.yml

deploy-argocd:
  helm repo add argo https://argoproj.github.io/argo-helm
  helm repo update
  kubectl get ns argocd || kubectl create ns argocd # create namespace if it doesn't exist
  helm upgrade --install argocd argo/argo-cd --namespace argocd # install or upgrade
  kubectl apply -f argocd.yml
