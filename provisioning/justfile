# this justfile acts as documentation by example

# secrets.yaml is an ansible vault file, locked by a gitignored .vault_pass.
# said .vault_pass can be found in keepass.

pickle-network:
  pkl eval machines.pkl -f yaml > vars.yaml

pickle-inventory:
  pkl eval inventory.pkl -f yaml > inventory.yaml

clean-pickles:
  ! rm inventory.yaml
  ! rm vars.yaml

list-inventory: pickle-inventory && clean-pickles
  ansible-inventory -i inventory.yaml --list

# - adds ssh keypair for inter-node communication
# - resizes root partition to fill disk
# initial configuration following manual setup
init-cluster-hardware: pickle-inventory && clean-pickles
  ansible-playbook -i inventory.yaml -l all playbooks/cluster.yaml --vault-password-file .vault_pass --extra-vars '@secrets.yaml'

# modifies vyos configuration to match the config file
network: pickle-inventory pickle-network && clean-pickles
  ansible-playbook -i inventory.yaml -l network playbooks/network.yaml --vault-password-file .vault_pass --extra-vars '@secrets.yaml'

#
configure-proxies: pickle-inventory && clean-pickles
  ansible-playbook -i inventory.yaml -l proxy playbooks/proxies.yaml --vault-password-file .vault_pass --extra-vars '@secrets.yaml'

edit-secrets:
  ansible-vault edit secrets.yaml --vault-password-file .vault_pass

# runs k0sctl commands on operator machine, applying configuration from config.yaml
create-cluster:
  env SSH_KNOWN_HOSTS=/dev/null k0sctl apply --config config/k0sctl.yaml
  env SSH_KNOWN_HOSTS=/dev/null k0sctl kubeconfig --config config/k0sctl.yaml > ~/.kube/config
  kubectl label nodes bernadette storage-capable=true
  kubectl label nodes bernadette openebs.tf.io/engine=mayastor

kubeconfig:
  env SSH_KNOWN_HOSTS=/dev/null k0sctl kubeconfig --config config/k0sctl.yaml > ~/.kube/config


reset-cluster:
  env SSH_KNOWN_HOSTS=/dev/null k0sctl reset --config config/k0sctl.yaml
